import random

# Состояния
states = ['Лифт стоит на месте (K1)', 'Лифт движется вверх (K2)', 'Лифт движется вниз (K3)']
# Выходные сигналы
outputs = ['Лифт сменил направление движения (Z1)', 'Лифт начал движение (Z2)', 'Лифт остановился (Z3)']

# Таблица вероятностей переходов и выходных сигналов для каждого состояния и входного сигнала
# Формат: transit[входной сигнал][текущее состояние] = [(вероятность, следующее состояние, выходной сигнал)]
transit = {
    0: [  # Нажать кнопку подъема (S1)
        [(0.03, 0, 1), (0.03, 0, 2), (0.04, 0, 3), (0.15, 1, 1), (0.4, 1, 2), (0.15, 1, 3), (0.05, 2, 1), (0.1, 2, 2), (0.05, 2, 3)],  # K1
        [(0.02, 0, 1), (0.04, 0, 2), (0.04, 0, 3), (0.2, 1, 1), (0.45, 1, 2), (0.15, 1, 3), (0.04, 2, 1), (0.04, 2, 2), (0.02, 2, 3)],  # K2
        [(0.12, 0, 1), (0.03, 0, 2), (0.01, 0, 3), (0.5, 1, 1), (0.1, 1, 2), (0.1, 1, 3), (0.07, 2, 1), (0.03, 2, 2), (0.04, 2, 3)]   # K3
    ],
    1: [  # Нажать кнопку спуска (S2)
        [(0.05, 0, 1), (0.07, 0, 2), (0.05, 0, 3), (0.02, 1, 1), (0.05, 1, 2), (0.03, 1, 3), (0.15, 2, 1), (0.43, 2, 2), (0.15, 2, 3)],  # K1
        [(0.1, 0, 1), (0.02, 0, 2), (0.02, 0, 3), (0.07, 1, 1), (0.03, 1, 2), (0.04, 1, 3), (0.46, 2, 1), (0.13, 2, 2), (0.11, 2, 3)],  # K2
        [(0.02, 0, 1), (0.04, 0, 2), (0.02, 0, 3), (0.05, 1, 1), (0.05, 1, 2), (0.02, 1, 3), (0.15, 2, 1), (0.45, 2, 2), (0.2, 2, 3)]   # K3
    ],
    2: [  # Нажать кнопку стоп (S3)
        [(0.2, 0, 1), (0.15, 0, 2), (0.43, 0, 3), (0.03, 1, 1), (0.02, 1, 2), (0.06, 1, 3), (0.03, 2, 1), (0.02, 2, 2), (0.06, 2, 3)],  # K1
        [(0.2, 0, 1), (0.2, 0, 2), (0.42, 0, 3), (0.02, 1, 1), (0.02, 1, 2), (0.04, 1, 3), (0.02, 2, 1), (0.03, 2, 2), (0.05, 2, 3)],  # K2
        [(0.25, 0, 1), (0.2, 0, 2), (0.46, 0, 3), (0.03, 1, 1), (0.02, 1, 2), (0.04, 1, 3), (0.03, 2, 1), (0.02, 2, 2), (0.05, 2, 3)]   # K3
    ]
}

current_state = 0  # Лифт стоит на месте (K1)
print("Начальное состояние: 'Лифт стоит на месте (K1)'")

# Функция для выбора вероятностного перехода
def probabilistic_choice(options):
    rnd_val = random.random()
    prob = 0.0
    for probability, next_state, output in options:
        prob += probability
        if rnd_val <= prob:
            return next_state, output

# Основной цикл работы автомата
while True:
    print("\nВыберите входной сигнал:")
    print("0 - Нажать кнопку подъема")
    print("1 - Нажать кнопку спуска")
    print("2 - Нажать кнопку стоп")
    num = int(input("Введите входной сигнал (0, 1 или 2): "))

    if num not in [0, 1, 2]:
        print("Неверный входной сигнал! Попробуйте снова.")
        continue

    # Переход к новому состоянию с учетом вероятностей
    current_state, output_signal = probabilistic_choice(transit[num][current_state])

    # Вывод текущего состояния и выходного сигнала
    print(f"Переход в состояние: '{states[current_state]}'")
    print(f"Выходной сигнал: '{outputs[output_signal - 1]}'")
